<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KIPP Silo</title>
    <description>A ***REMOVED*** is &#39;a deep bin for storing material&#39; as is KIPP Silo. KIPP Silo is the KIPP Network&#39;s Self-organized, Iterative, Late-binding (or Lightweight), and Open-source (for now) data warehouse solution.</description>
    <link>http://kippdata.github.io/***REMOVED***/***REMOVED***/</link>
    <atom:link href="http://kippdata.github.io/***REMOVED***/***REMOVED***/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 19 Aug 2015 12:35:33 -0500</pubDate>
    <lastBuildDate>Wed, 19 Aug 2015 12:35:33 -0500</lastBuildDate>
    <generator>Jekyll v1.5.1</generator>
    
      <item>
        <title>Alumni (SalesForce) DB Integration</title>
        <description>&lt;p&gt;This project is still alive, in case you all were wondering.  I’ve worked with Charlie Bini and Andrew MArtin at KIPP NJ and we’ve created a very nice script that grabs the five most important Alumni DB tables form sales force and loads them up to a SQL Server DB.  They are up on our &lt;a href=&quot;http://www.github.com/kippdata/***REMOVED***&quot;&gt;our github page&lt;/a&gt; now.  You can find them &lt;a href=&quot;https://github.com/kippdata/***REMOVED***/tree/master/scripts/Alumni_mirror&quot;&gt;here&lt;/a&gt;! &lt;/p&gt;

&lt;p&gt;You’ll find three files in that repo.  You only need to make changes in &lt;code&gt;config.py&lt;/code&gt; which has fields for your Salesforce credentials and your. It looks like this: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;## Alumni Salesforce DB configurables&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SF_UID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;you@kipphawaii.org&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SF_PWD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;secret_wd!&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SF_TOKEN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;&amp;#39;very_long_token_from_salesforce&amp;#39;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;## Silo DB configurables&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DB_TYPE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;mssql&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DB_API&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;pyodbc&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DB_DNS_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Silo_Alumni_64&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DB_SERVER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DB_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Alumni_mirror&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DB_USERNAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DB_PASSWORD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You simply substitute your own credentials.  Easiest use is to set up a DNS directly to where in SQL Server instance you’ll store these data.&lt;/p&gt;

&lt;p&gt;You then need to &lt;a href=&quot;http://technet.microsoft.com/en-us/library/cc766428.aspx&quot;&gt;set up a Task Scheduler job&lt;/a&gt; to hit the &lt;code&gt;sf_get_and_load.py&lt;/code&gt;.  You will in all likelihood need to use a 64-bit Python interpretor, since the &lt;code&gt;Account&lt;/code&gt; table in the Alumni DB is huge and the &lt;code&gt;pandas&lt;/code&gt; package won’t be able to handle it in 32-bit Python. The (Anaconda distribtuion is great)[https://store.continuum.io/cshop/anaconda/].&lt;/p&gt;

</description>
        <pubDate>Wed, 19 Aug 2015 07:00:00 -0500</pubDate>
        <link>http://kippdata.github.io/***REMOVED***/***REMOVED***/2015/08/19/Alumni_DB_Integration/</link>
        <guid isPermaLink="true">http://kippdata.github.io/***REMOVED***/***REMOVED***/2015/08/19/Alumni_DB_Integration/</guid>
        
        
      </item>
    
      <item>
        <title>Linking PowerSchool to SQL Server</title>
        <description>&lt;p&gt;This rather longish document outlines a couple of important steps in configuring your KIPP Silo instance. It is primarily aimed at setting up a linked server (specifically PowerSchools Oracle back-end) on MS SQL Server.  It also covers in passing &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;how to connect to your EC2 instance;&lt;/li&gt;
  &lt;li&gt;setting up a VPN for Person-hosted PowerSchool&lt;/li&gt;
  &lt;li&gt;creating a new database in SQL Server&lt;/li&gt;
  &lt;li&gt;creating a new user in SQL Server and allowing that user access to a database.&lt;/li&gt;
  &lt;li&gt;Allowing local access to your database.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Disclaimer: These direction are long and I hope detailed enough to get anyone through this process in about 30 mins. However, I am not a DBA and there’s a better than likely chance that I’ve neglected to include a step.  Try going through them.  Let me know where you have trouble and I’ll update this doc!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#pre-reqs&quot;&gt;Pre-reqs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#get-f5-big-ip-edge-client&quot;&gt;Get F5 Big-IP Edge Client&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#get-java&quot;&gt;Get Java&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#get-oracle-client-software&quot;&gt;Get Oracle Client software&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#create-kipp-***REMOVED***-database&quot;&gt;Create KIPP Silo Database&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#create-the-db&quot;&gt;Create the DB&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#create-a-database-user&quot;&gt;Create a database user&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#link-to-powerschool&quot;&gt;Link to PowerSchool&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#provider-options-gui-approach&quot;&gt;Provider options: GUI Approach&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#provider-options-stored-procedure-approach&quot;&gt;Provider options: Stored Procedure Approach&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#actually-linking-the-server&quot;&gt;Actually Linking the Server&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#accessing-your-sql-server-instance-and-linked-databases-like-powerschool-from-outside-of-sql-server-management-studio&quot;&gt;Accessing your SQL Server Instance (and linked databases like PowerSchool) from outside of SQL Server Management Studio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;pre-reqs&quot;&gt;Pre-reqs&lt;/h2&gt;
&lt;p&gt;Once you’ve logged into your Windows Server Desktop, you might want to get some other software you are already likely using. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wait!&lt;/strong&gt;  You haven’t connected to your AWS EC2 Windows Server 2012 server yet?  AWS makes it easy: login to AWS, navigate to your EC2 instances, check your KIPP Silo instance and then click the &lt;strong&gt;Connect&lt;/strong&gt; button at the top of the page. &lt;/p&gt;

&lt;p&gt;So back to setting up For example, the first thing I did was fire up IE so I could go and get Chrome.  Once I installed and launched Chrome, I signed in with my google credentials, which caused all of my bookmarks, extensions, and history to populate my new copy of Chrome.  And here’s some links to some other software that I like to use that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Text Editors (you will need something like this)
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.sublimetext.com/2&quot;&gt;Sublime Text 2&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.lighttable.com/&quot;&gt;LightTable&lt;/a&gt;: This is pretty cool text editor that allows for line-by-line evalu	ation of code in scripts. It’s pretty bleeding-edge so YMMV. &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Programming languages and Integrated Development Environments
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.python.org/download/releases/2.7.8/&quot;&gt;Python 2.7.8&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.python.org/download/releases/2.7.8/&quot;&gt;R&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.rstudio.com/products/rstudio/download/&quot;&gt;RStudio&lt;/a&gt;: this is an excellent IDE for R. &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;get-f5-big-ip-edge-client&quot;&gt;Get F5 Big-IP Edge Client&lt;/h2&gt;
&lt;p&gt;If you have a PowerSource account with Pearson you get it by searching for &lt;a href=&quot;https://powersource.pearsonschoolsystems.com/article/70601?from=search&quot;&gt;article #70601&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/F5_Big_IP_client.png&quot; alt=&quot;F5 Big-IP Edge Client via PowerSource&quot; title=&quot;F5 Big-IP&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You definitely need the F5 VPN client if your PowerSchool instance is Pearson-hosted. You’ll need to use your VPN credentials, which you can get from Pearson by calling support if you don’t know what it is. If you use another provider for hosting or self-host your PowerSchool instance then you’ll want to talk to your IT staff.&lt;/p&gt;

&lt;h2 id=&quot;get-java&quot;&gt;Get Java&lt;/h2&gt;

&lt;p&gt;Use the &lt;a href=&quot;http://java.com/en/download/installed.jsp&quot;&gt;Verify Java page&lt;/a&gt; to install the lastest version of Java. &lt;/p&gt;

&lt;p&gt;You’ll also need a Java Developer Kit (JDK).  You get that here!&lt;/p&gt;

&lt;h2 id=&quot;get-oracle-client-software&quot;&gt;Get Oracle Client software&lt;/h2&gt;

&lt;p&gt;You need to install the correct Oracle drivers.  You want the latest version of the Oracle Data Access Components (ODAC), and you want the XCopy deployment.  They are available here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/database/windows/downloads/index-090165.html&quot;&gt;64-bit Oracle Data Access Components (ODAC) Downloads&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you download and unzip this into a folder, you need to run the following command from a terminal emulator (like PowerShell) in that folder:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Administrators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Downloads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ODAC121010Xcopy_x64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;.\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bat&lt;/span&gt; 
	&lt;span class=&quot;n&quot;&gt;oledb&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oracle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;odac64&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;odac64&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then you need to add two folders to your system path (&lt;a href=&quot;http://www.howtogeek.com/118594/how-to-edit-your-system-path-for-easy-command-line-access/&quot;&gt;here’s how you do this&lt;/a&gt;): &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oracle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;odac64&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oracle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;odac64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next you need to &lt;strong&gt;reboot your system&lt;/strong&gt;.  Click the &lt;strong&gt;Start&lt;/strong&gt; button in the lower left hand corner of you screen (it looks like an abstract 4-pane window viewed at an angle), which brings up the “Start page”. Click on the power icon in the upper right hand corner of the screen.  Select &lt;strong&gt;Restart&lt;/strong&gt;.  Twiddle your thumbs. &lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;create-kipp-***REMOVED***-database&quot;&gt;Create KIPP Silo Database&lt;/h2&gt;

&lt;h3 id=&quot;create-the-db&quot;&gt;Create the DB&lt;/h3&gt;
&lt;p&gt;Open up Microsoft SQL Server Management Studio.  Creating a new database is really super simple. Right click on &lt;strong&gt;Databases&lt;/strong&gt; in the left-hand navigation pane and select &lt;strong&gt;New Database…&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/new_database_1.png&quot; alt=&quot;Create DB&quot; title=&quot;Create New DB Step 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now give it a name (KIPP_Silo, perhaps?) and click &lt;strong&gt;OK&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/new_database_2.png&quot; alt=&quot;Create DB&quot; title=&quot;Create New DB Step 2&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;create-a-database-user&quot;&gt;Create a database user&lt;/h3&gt;
&lt;p&gt;In order to link to your own SQL Server instance from outside of SQL Server Management Studio (i.e., from a R or Python script that manages your ST Math roster or something), you’ll need to create a user and assign that user to a database:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/create_***REMOVED***_user_0.png&quot; alt=&quot;Create DB User&quot; title=&quot;Create Silo User Step 0&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now give the new user a name (say, “***REMOVED***”), click the radio button for &lt;strong&gt;SQL Server authentication&lt;/strong&gt; and give that user a password. &lt;/p&gt;

&lt;p&gt;Uncheck the “Enforce password expiration”. &lt;/p&gt;

&lt;p&gt;Select “KIPP_Silo” (or whatever you named the DB above) in the Default Database dropdown.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/create_***REMOVED***_user_1.png&quot; alt=&quot;Create DB User&quot; title=&quot;Create Silo User Step 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;User Mapping&lt;/strong&gt; under &lt;strong&gt;Select a page&lt;/strong&gt;.  Click the checkbox next to ‘KIPP_Silo’ and ensure that the checkboxes next to db_datawriter, db_datareader, and public are checked.  Click &lt;strong&gt;OK&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/create_***REMOVED***_user_2.png&quot; alt=&quot;Create DB User&quot; title=&quot;Create Silo User Step 2&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;link-to-powerschool&quot;&gt;Link to PowerSchool&lt;/h2&gt;

&lt;p&gt;Ok. Now you need to set some parameters for the linked server provider (i.e., the software you downloaded from Oracle above that manages the connection to Oracle database that is the backbone of your PowerSchool instance).&lt;/p&gt;

&lt;p&gt;You first must configure the Oracle OleDB provider (ORAOLEDB.Oracle) to run inside the SQL Server process and then configure it to accept parameters. There are two ways to do this: one with the SQL Server Management Studio GUI interface and another by firing off some stored procedures.  You need only to done of these approaches&lt;/p&gt;

&lt;h3 id=&quot;provider-options-gui-approach&quot;&gt;Provider options: GUI Approach&lt;/h3&gt;
&lt;p&gt;It’s pretty straighforward to use the GUI.  In Management Studio’s left-hand navigation pane expand &lt;strong&gt;Server Objects&lt;/strong&gt;, then expand &lt;strong&gt;Linked Servers&lt;/strong&gt;, and then expand &lt;strong&gt;Providers&lt;/strong&gt;.  Right click on &lt;strong&gt;ORAOLEDB.Oracle&lt;/strong&gt; and select &lt;strong&gt;Properties&lt;/strong&gt;, which will open Oracle Provider for OLE DB Provider options dialog. Ensure that check boxes are ticked to enable &lt;strong&gt;Dynamic parameters&lt;/strong&gt; and &lt;strong&gt;Allow inprocess&lt;/strong&gt;. Click &lt;strong&gt;OK&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/provider_options.png&quot; alt=&quot;Provider options&quot; title=&quot;Oracle Provider Options for OLE DB&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;provider-options-stored-procedure-approach&quot;&gt;Provider options: Stored Procedure Approach&lt;/h3&gt;
&lt;p&gt;Alternatively, run these two stored procedures in the Managment Studio console:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sp_MSset_oledb_prop&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ORAOLEDB.Oracle&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;AllowInProcess&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sp_MSset_oledb_prop&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ORAOLEDB.Oracle&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;DynamicParameters&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;actually-linking-the-server&quot;&gt;Actually Linking the Server&lt;/h3&gt;
&lt;p&gt;Ok, &lt;em&gt;we are near the end here!!!&lt;/em&gt;  You’ll need your PowerSchool instances IP address, instance name (usually something like VA038, which is the state you are in followed by 3 integers).  &lt;/p&gt;

&lt;p&gt;In the left hand navigation of Management Studio right-click &lt;strong&gt;Linked Servers&lt;/strong&gt; and select “New Linked Server…”, which opens the &lt;strong&gt;New Linked Server&lt;/strong&gt; dialogue. Under the &lt;strong&gt;General Page&lt;/strong&gt; put the name of your soon-to-be-linked server in the text box next “Linked server:” (in Chicago we us ‘PS_CHI’ and KIPP NJ (née Team) uses ‘PS_TEAM’).&lt;/p&gt;

&lt;p&gt;Under &lt;strong&gt;Server type:&lt;/strong&gt;	 select “Other data source” and select &lt;strong&gt;Oracle Provider for OLE DB&lt;/strong&gt;.  Fill in “Oracle” for &lt;strong&gt;Product name&lt;/strong&gt;, 	and the data source string (written IP_Address:1521/InstanceID, see figure below for an example). Leave &lt;strong&gt;Provider string:&lt;/strong&gt; blank. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/new_linked_server_general.png&quot; alt=&quot;New Linked Server General&quot; title=&quot;New Linked Server General&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now click on &lt;strong&gt;Security&lt;/strong&gt; under &lt;strong&gt;Select page&lt;/strong&gt; in the same dialogue box.  Under the &lt;strong&gt;For a login not defined in the list above, connections will&lt;/strong&gt; prompt select the &lt;strong&gt;Be made using this security context&lt;/strong&gt; choice.  Fill in your &lt;strong&gt;Remote login:&lt;/strong&gt;  (usually ‘PSNAVIGATOR’) and your password for that user. Click &lt;strong&gt;OK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/new_inked_server_security.png&quot; alt=&quot;New Linked Server Security&quot; title=&quot;New Linked Server Security&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You should, if all goes well, have a connected Server.  You can run the following bit of SQL as a quick test:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;OPENQUERY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PS_CHI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		  &lt;span class=&quot;s1&quot;&gt;&amp;#39;SELECT  *&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;		   FROM students&amp;#39;&lt;/span&gt;
		  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;accessing-your-sql-server-instance-and-linked-databases-like-powerschool-from-outside-of-sql-server-management-studio&quot;&gt;Accessing your SQL Server Instance (and linked databases like PowerSchool) from outside of SQL Server Management Studio&lt;/h2&gt;

&lt;p&gt;So we went through this rigmarole of setting up a user on the KIPP_Silo database. Why?  Because we will use that user to access the database (and any linked databases therein) from outside to SQL Server Management Studio (which automagically connects to your SQL Server Database).  This is especially important if you will want to access your data from Python or R script to load your data from outside applications (ST Math, i-Ready, Kickboard, etc.) into the database, do any statistical analysis, or create and maintain roster integrations.  So it is pretty important. &lt;/p&gt;

&lt;p&gt;If you’ve done nothing to your DB since spinning up the Windows Server EC2 instance, then your instance is pretty locked down and hard to access.  The following steps will open it to applications running on the same instance (i.e., on the same Windows Server computer, but not to the public internet). So let’s open it up a bit.&lt;/p&gt;

&lt;p&gt;Click on the &lt;strong&gt;Start&lt;/strong&gt; button, then on the &lt;strong&gt;Start Page&lt;/strong&gt; click the downward pointing arrow in a circle.  Select &lt;strong&gt;SQL Server 2014 Configuration Manager&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/apps.png&quot; alt=&quot;Apps&quot; title=&quot;Apps&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Expand &lt;strong&gt;SQL Server Network Configuration&lt;/strong&gt; and click on &lt;em&gt;*Protocols for MSSQLSERVER&lt;/em&gt;.  &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/config_1.png&quot; alt=&quot;Config 1&quot; title=&quot;Config 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Right-click on &lt;strong&gt;TCP/IP&lt;/strong&gt; and select &lt;strong&gt;Properties&lt;/strong&gt;. Click on the &lt;strong&gt;IP Addresses&lt;/strong&gt; tab.  Scroll down to &lt;strong&gt;IP4&lt;/strong&gt; and verify that is for your local hose (***REMOVED***).  Set the &lt;strong&gt;Active&lt;/strong&gt; and &lt;strong&gt;Enabled&lt;/strong&gt; properties to &lt;strong&gt;YES&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/config_2.png&quot; alt=&quot;Config 2&quot; title=&quot;Config 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on the &lt;strong&gt;Protocol&lt;/strong&gt; tab and verify &lt;strong&gt;Enabled&lt;/strong&gt; and &lt;strong&gt;Listen All&lt;/strong&gt; are set to &lt;strong&gt;Yes&lt;/strong&gt;. Click &lt;strong&gt;OK&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Finally, restart your SQL Server Services. In the left-hand navigation pane click on &lt;strong&gt;SQL Server Services&lt;/strong&gt;, then right click on &lt;strong&gt;SQL Server (MSSQLSERVER)&lt;/strong&gt; and select &lt;strong&gt;Restart&lt;/strong&gt;.
&lt;img src=&quot;/***REMOVED***/images/config_3.png&quot; alt=&quot;Config 3&quot; title=&quot;Config 3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That’s it.  You should now have a SQL Server instance that be accessed locally by your own scripts and a clear view of your linked PowerSchool Instance.  &lt;/p&gt;

&lt;p&gt;Again, these directions/this documentation is long and I may have left out some crucial step.  So if you run into any problems just let me know. &lt;/p&gt;

</description>
        <pubDate>Tue, 16 Sep 2014 15:00:00 -0500</pubDate>
        <link>http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/09/16/Setting_Up_PoweSchool_on_SQL_Server/</link>
        <guid isPermaLink="true">http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/09/16/Setting_Up_PoweSchool_on_SQL_Server/</guid>
        
        
      </item>
    
      <item>
        <title>Setting up SQL Server on AWS</title>
        <description>&lt;p&gt;This step-by-step tutorial covers the process for launching your own version of the KIPP Silo data warehouse on &lt;a href=&quot;http://aws.amazon.com&quot;&gt;Amazon Web Services&lt;/a&gt;.  &lt;em&gt;Note: I’ve never done this before. Like ever.&lt;/em&gt; In other words this is my first time doing this ever and I’m documenting here so that (i) big KIPPsters that haven’t done this before can see how it can be done and (ii) any mistakes I make are documented and someone—anyone—can correct them.&lt;/p&gt;

&lt;p&gt;It will cover how to launch an EC2 instance with Windows Server as your operating system and SQL Server as the database that will serve as your KIPP Silo data warehouse. &lt;strong&gt;Note that these instructions are good for the day they were written.  If you are reading them sometime down the road they might not accurately reflect your current state of the world/SQL Server/Windows Server/AWS/etc.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#amazon-web-services&quot;&gt;Amazon Web Services&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#choose-ami&quot;&gt;Choose AMI&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#choose-instance-type&quot;&gt;Choose Instance Type&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#configure-instance-details&quot;&gt;Configure Instance Details&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#configure-security-group&quot;&gt;Configure Security Group&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#launch-instance&quot;&gt;Launch Instance!&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#key-pair&quot;&gt;Key Pair&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#connect&quot;&gt;Connect&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#this-seems-a-all-a-bit-overwhelming-and-maybe-even-a-little-scary-what-should-i-do&quot;&gt;This seems a all a bit overwhelming and maybe even a little scary, what should I do?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#next-steps&quot;&gt;Next Steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;amazon-web-services&quot;&gt;Amazon Web Services&lt;/h2&gt;

&lt;p&gt;First, you’ll need to go to &lt;a href=&quot;http://aws.amazon.com/&quot;&gt;Amazon Web Services&lt;/a&gt; and click on sign up:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/1-AWS_Sign_up_1.png&quot; alt=&quot;AWS Landing Page&quot; title=&quot;AWS Landing Page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Go through the sign up process and then you will find your self at the &lt;strong&gt;AWS Managment Console&lt;/strong&gt;. This is where you will launch an EC2 instance, which is to say an &lt;strong&gt;E&lt;/strong&gt;lastic &lt;strong&gt;C&lt;/strong&gt;ompute web server hosted and maintained by your favorite purveyor of books and dry goods. But don’t worry, they are crack experts at hosting stuff for you in &lt;em&gt;The Cloud&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;You will see a bunch of color coded  and coordinated icons for different AWS services. The second one in orange on the left says EC2.  That’s the one you want.  Click it!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/2-AWS_Console_1.png&quot; alt=&quot;AWS Management Console 1&quot; title=&quot;AWS Management Console 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This brings your the &lt;strong&gt;EC2 Dashboard&lt;/strong&gt;. This is were you manage all your different EC2 instances.  If this is your first time launching an EC2 instance, then you’ll see lots of zeros and not much of any thing else.  &lt;/p&gt;

&lt;p&gt;To orient you to the console you’ll see that as of this writing KIPP Chicago has two running instances under the &lt;strong&gt;Resources&lt;/strong&gt; section.  They both support our data analysis and interactive reporting website: one instance is relatively powerful machine that we use for production and the other is the development server.  There is an IP address for each and each has its own storage.  And we have one key pair, which is how we securely access these machines (at least the first time we do so).&lt;/p&gt;

&lt;p&gt;The important part of this screen for this step-by-step is the big blue button under the &lt;strong&gt;Create Instance&lt;/strong&gt;* section in the center panel labeled &lt;strong&gt;Launch Instance&lt;/strong&gt;.  Go ahead and click that bad boy:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/3-AWS_Launch_Instance.png&quot; alt=&quot;AWS EC2 Dashboard&quot; title=&quot;AWS EC2 Dashboard&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;choose-ami&quot;&gt;Choose AMI&lt;/h3&gt;
&lt;p&gt;This is the screen where you will need to pick the &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html&quot;&gt;Amazon Machine Image&lt;/a&gt; for the operating system (Microsoft Windows Server 2012 R2) already loaded with your copy of fully licensed database (SQL Server Standard).  You’ll need to scroll down the page a bit to find the AMI you want: &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Microsoft Windows Server 2012 R2 with SQL Server Standard - ami-82e023ea&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/4-Choose_AMI.png&quot; alt=&quot;AWS Choose Instance&quot; title=&quot;AWS Choose Instance&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;choose-instance-type&quot;&gt;Choose Instance Type&lt;/h3&gt;

&lt;p&gt;Here you pick your server size, configuration, and type.  The cheapest you can buy from the on-demand instances (i.e., a pay-as-you-go plan) is the m3.medium that runs you $0.36/hour.  You can drop that price in half to $0.16/hour by paying a little bit upfront ($1061) for a longer commitment (3-years). That’s only about $5,300 over three years (i.e., $1,764/year) to have your Silo data warehouse hosted in the cloud.  Not to shabby given what your region is paying to ed tech companies to ***REMOVED*** all of your data (ha! See what I did there).&lt;/p&gt;

&lt;p&gt;So choose the m3.medium instance and click the &lt;strong&gt;Next: Configure Instance Details&lt;/strong&gt; button
&lt;img src=&quot;/***REMOVED***/images/5-Choose_Instance.png&quot; alt=&quot;AWS Choose Instance&quot; title=&quot;AWS Choose Instance&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;configure-instance-details&quot;&gt;Configure Instance Details&lt;/h3&gt;
&lt;p&gt;This will be quick and easy.  You don’t need to change anything if you don’t want to.  For the sake of safety, though, I like to check the &lt;strong&gt;Protect against accidental termination&lt;/strong&gt; box.  Why?  Well terminating and instance kills it forever. In lieu of terminating an instance, we can stop the instance, which saves the state of the instance and shuts down the server (which can save you money).  You can always restart a stopped instance, but terminated instances are gone forever. Whether you check that box or not, go ahead and click &lt;strong&gt;6. Configure Security Group&lt;/strong&gt; on the breadcrumb trail at the top of the page. (I’m skipping &lt;strong&gt;Add Storage&lt;/strong&gt; and &lt;strong&gt;Tag Instance&lt;/strong&gt;.  You can continue through those steps if you want, as they are pretty self-explanatory, but the default storage should be sufficient and tags are cool but not necessary.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/6-Configure_Instance.png&quot; alt=&quot;AWS Configure Instance&quot; title=&quot;AWS Configure Instance&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;configure-security-group&quot;&gt;Configure Security Group&lt;/h3&gt;

&lt;p&gt;Here you can either create a new security group, which is essentially a set of rules for a firewall that secures which protocols, ports, and IP addresses will be able to access your Windows Server.  The out of the box set-up should be sufficient for right now.  You can rename the Security Group name to something memorable (how about KIPP Silo!).  The click &lt;strong&gt;Review and Launch&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/7-Config_Security_Group.png&quot; alt=&quot;AWS Configure Security Group&quot; title=&quot;AWS Configure Security Group&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;launch-instance&quot;&gt;Launch Instance!&lt;/h3&gt;

&lt;p&gt;You’ll now be at the review and launch instance page.  Sweet!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/8-Launch.png&quot; alt=&quot;AWS Launch&quot; title=&quot;AWS Launch&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;key-pair&quot;&gt;Key Pair&lt;/h3&gt;
&lt;p&gt;Before you launch completely, you’ll need to assign a &lt;strong&gt;key pair&lt;/strong&gt; to the server.  The key pair works just like keys do to your home or car.  You must have possession of a special file (a key file) to access the server.  Without the key you can’t access the server initially.  Upon clicking “Launch” you should see a pop-up dialogue where you can either select an existing key pair if you already have or create a new key pair (AWS has one side of the key pair—called the public key—and you have the other side–called the private key or PEM file).  Here I create a new key pair and name it &lt;strong&gt;KIPP Silo&lt;/strong&gt;. You’ll download the key to your desktop/laptop, so please keep track of it and save it somewhere memorable. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/9-Key_Pair.png&quot; alt=&quot;AWS Key Pair&quot; title=&quot;AWS Key Pair&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;connect&quot;&gt;Connect&lt;/h3&gt;

&lt;p&gt;Click on this link and follow the instructions provided to connect to the instance. AWS provides clear instructions on connecting to your instance for Windows, Mac, or Linux.
&lt;img src=&quot;/***REMOVED***/images/10-AWS_Connect_to_Windows_Instance.png&quot; alt=&quot;AWS Connect&quot; title=&quot;AWS Connect&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And that is it.  You now have a server up and running with a database installed to boot. &lt;/p&gt;

&lt;h2 id=&quot;this-seems-a-all-a-bit-overwhelming-and-maybe-even-a-little-scary-what-should-i-do&quot;&gt;This seems a all a bit overwhelming and maybe even a little scary, what should I do?&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Remember, that I’ve never done this before too, so it was a little scary for me.  But I still go it done.  AWS is super nice to the new user and provides plenty of attention.&lt;/li&gt;
  &lt;li&gt;You can call/email/text me or Andrew or James or many other folks throughout the network.&lt;/li&gt;
  &lt;li&gt;Do all of the above but in no risk format.  You want to select an AMI running Windows Server with SQL Server Express on a micro instance.  This set up, when used with a new account, is in the so called “Free usage tier”, meaning you have a year to use a very small instance with the lower powerd database &lt;strong&gt;FOR FREE&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It’s a playground.  Fall down, get back up, no real risks. When you are comfortable, then follow these instructions for the SQL Server Standard edition.&lt;/p&gt;

&lt;h2 id=&quot;next-steps&quot;&gt;Next Steps&lt;/h2&gt;
&lt;p&gt;In my next couple of posts, I’ll demonstrate how to launch in database instance (this will be your copy of KIPP Silo), how to set-up a persistent VPN connection to a Pearson-hosted PowerSchool instance, how to link your PowerSchool instance to the KIPP Silo SQL Server database, and how to link your Illuminate instance to your KIPP Silo SQL Server database.  &lt;/p&gt;

&lt;p&gt;Stay tuned!!!&lt;/p&gt;

</description>
        <pubDate>Sat, 02 Aug 2014 15:00:00 -0500</pubDate>
        <link>http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/08/02/SQL-Server-on-AWS/</link>
        <guid isPermaLink="true">http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/08/02/SQL-Server-on-AWS/</guid>
        
        
      </item>
    
      <item>
        <title>KIPP Silo @ KSS Day 4 (AM/PM Edition)</title>
        <description>&lt;p&gt;It’s Thursday.  I’m in the Grit Lounge again with Andrew (I’ll be in an out all AM, but Andrew will be around).  &lt;/p&gt;

&lt;p&gt;In the afternoon (after 1:30) the foundation reserved a room for our use: 372 A&lt;/p&gt;

&lt;p&gt;This is what I’ll be working on today&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;documenting the process to spin up an &lt;a href=&quot;http://aws.amazon.com/ec2/&quot;&gt;EC2 instance&lt;/a&gt; on AWS with Windows Server and SQL Server &lt;/li&gt;
  &lt;li&gt;documenting how to set up a persistent VPN to Pearson Hosted PowerSchool;&lt;/li&gt;
  &lt;li&gt;documenting how to connect our fist KIPP Silo instance to PowerSchool and (ambitiously) Illuminte&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Andrew can help folks with database and R stuff.&lt;/p&gt;

&lt;p&gt;So join us!&lt;/p&gt;

</description>
        <pubDate>Thu, 31 Jul 2014 04:20:00 -0500</pubDate>
        <link>http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/07/31/KSS-day-four/</link>
        <guid isPermaLink="true">http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/07/31/KSS-day-four/</guid>
        
        
      </item>
    
      <item>
        <title>KIPP Silo @ KSS Day 3 (Morning Edition)</title>
        <description>&lt;p&gt;It’s Wednesday.  I’m in the Grit Lounge.  There’s power though not many chairs. Come on end all.  I’ll be working on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;spinning up an &lt;a href=&quot;http://aws.amazon.com/ec2/&quot;&gt;EC2 instance&lt;/a&gt; on AWS with Windows Server and SQL Server running;&lt;/li&gt;
  &lt;li&gt;docummenting that proces;&lt;/li&gt;
  &lt;li&gt;setting up a persistent VPN to Pearson Hosted PowerSchool;&lt;/li&gt;
  &lt;li&gt;documenting that process too;&lt;/li&gt;
  &lt;li&gt;Connecting our fist KIPP Silo instance to PowerSchool and (ambitiously) Illuminte, and&lt;/li&gt;
  &lt;li&gt;Documenting those connections.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If all goes well, I hope to have the first 3 bullets done by lunch.&lt;/p&gt;

&lt;p&gt;Here’s the location of the Grit Lounge for those who don’t yet know:
&lt;img src=&quot;/***REMOVED***/images/KSS_2014_Tuesday_pm.png&quot; alt=&quot;KSS Map Day 3 AM&quot; title=&quot;KSS Map Day 3 AM&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 30 Jul 2014 05:00:00 -0500</pubDate>
        <link>http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/07/30/KSS-day-three/</link>
        <guid isPermaLink="true">http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/07/30/KSS-day-three/</guid>
        
        
      </item>
    
      <item>
        <title>KIPP Silo @ KSS Day 2 Afternoon Location</title>
        <description>&lt;p&gt;We are now in the Grit Lounge (352 B, which is right next to the Optimism Lounge): &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/KSS_2014_Tuesday_pm.png&quot; alt=&quot;KSS Map Day 2 pm&quot; title=&quot;KSS Map Day 2 pm&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 29 Jul 2014 09:15:00 -0500</pubDate>
        <link>http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/07/29/KSS-day-two-pm/</link>
        <guid isPermaLink="true">http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/07/29/KSS-day-two-pm/</guid>
        
        
      </item>
    
      <item>
        <title>KIPP Silo @ KSS Day 2</title>
        <description>&lt;p&gt;Today let’s try and take over the Optimism Lounge (352 A): &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/KSS_2014_Tuesday.png&quot; alt=&quot;KSS Map Day 2&quot; title=&quot;KSS Map Day 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s right across the hall from 342 B/E, where the &lt;a href=&quot;http://www.kipp.org/00/KSS2014/mobile/session-details.cfm?s=3043&quot;&gt;Technology and Data Community Kick-off&lt;/a&gt; is located.&lt;/p&gt;

</description>
        <pubDate>Tue, 29 Jul 2014 05:43:00 -0500</pubDate>
        <link>http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/07/29/KSS-day-two/</link>
        <guid isPermaLink="true">http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/07/29/KSS-day-two/</guid>
        
        
      </item>
    
      <item>
        <title>GitHub and Git Tutorials</title>
        <description>&lt;p&gt;So I promised everyone new to distributed development projects a tutorial of sorts on &lt;a href=&quot;http://www.GitHub.com&quot;&gt;GitHub&lt;/a&gt; and its underlying version control system &lt;a href=&quot;http://Git-scm.com&quot;&gt;Git&lt;/a&gt;. Rather than writing a super long tutorial and in the spirit of “not reinventing the wheel”, I hope dear readers you’ll forgive me for creating this &lt;strong&gt;Resource Roundup&lt;/strong&gt;.  And rather than be a brain dump of links, this roundup will be curated and sectioned so your can jump in where you feel most comfortable.&lt;/p&gt;

&lt;h2 id=&quot;what-are-git-and-github-anyhow&quot;&gt;What are Git and GitHub, anyhow?&lt;/h2&gt;

&lt;h3 id=&quot;github&quot;&gt;GitHub&lt;/h3&gt;
&lt;p&gt;GitHub at its core is a social networking site, not unlike &lt;a href=&quot;https://wwww.facebook.com&quot;&gt;Facebook&lt;/a&gt; or even &lt;a href=&quot;http://www.kippshare.org&quot;&gt;KIPP Share&lt;/a&gt;. You have a profile, follow folks, and can even post stuff. The stuff you post, however, is where GitHub differs from traditional social networking sites. You (usually, but not exclusively) post the code and documents of the projects you are working on the site. So &lt;em&gt;de minimus&lt;/em&gt;, GitHub gives you a secondary storage place (the first is likley your laptop) for all of your work. You can save any type of file there, not just lines of code. And having a second copy of your work is really awesome when you computer blows up or you somehow write over &lt;a href=&quot;/***REMOVED***/images/Data_system_diagram.svg&quot; title=&quot;KIPP Chicago Data Systems&quot;&gt;that awesome data flow diagram you were putting together for KSS&lt;/a&gt;(this happended to me!).&lt;/p&gt;

&lt;p&gt;Nevertheless, GitHub really shines at hosting code repositories and supporting software development.  At the heart of its support is the Git &lt;a href=&quot;http://Git-scm.com/video/what-is-version-control&quot;&gt;version control&lt;/a&gt; system.  And GitHub makes Git super easy to use by providing a visual user interface and a place to host your repositories (the set-up of which is a snap and really well documented).  Of course, you can always use GitHub from the command line.&lt;/p&gt;

&lt;h3 id=&quot;git&quot;&gt;Git&lt;/h3&gt;
&lt;p&gt;Git is version control software, which means it manages changes to a project without overwriting any part of that project.  Saving everything you’ve ever done means that (i) you can always revert to an earlier version of anything you are working on if you aren’t pleased with your progress and (ii) you can work through changes made by other people, say Andrew Martin and myself, &lt;em&gt;on the same document&lt;/em&gt;!  Git will save my version, Andrew’s version, the version we both started working from, and provides and interface to identify differences between the three documents and merge them together into one new document. It’s a bit like &lt;a href=&quot;https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=2&amp;amp;ved=0CCsQFjAB&amp;amp;url=http%3A%2F%2Foffice.microsoft.com%2Fen-us%2Fword-help%2Ftrack-changes-while-you-edit-HA001218690.aspx&amp;amp;ei=X4DXU8SoIvHO8QGd_oCYDg&amp;amp;usg=AFQjCNEoPwfzhJ8KMQ4nP5gEdQ4KRtCxEQ&amp;amp;sig2=OyBmNiL6lUojR1el2DtnHQ&amp;amp;bvm=bv.71778758,d.b2U&quot;&gt;Word’s Track Changes&lt;/a&gt; feature but you always have every copy of every version everyone ever put together without having to save a zillion files with different names (and naming conventions when working with others).&lt;/p&gt;

&lt;p&gt;So in the end, using Git and GitHub gives you a system for backing-up, version controlling, and collaboratively sharing your work.&lt;/p&gt;

&lt;p&gt;(Awseome fun Git fact for nerds: you have the inventor or &lt;a href=&quot;http://www.linux.com/&quot;&gt;Linux&lt;/a&gt; to thank for Git: &lt;a href=&quot;http://en.wikipedia.org/wiki/Linus_Torvalds&quot;&gt;Linus Torvalds&lt;/a&gt;!)&lt;/p&gt;

&lt;h2 id=&quot;ok-backing-up-version-controlling-and-sharing-my-code-seems-the-honorable-thing-to-do--how-do-i-get-started&quot;&gt;OK, backing-up, version controlling, and sharing my code seems the honorable thing to do.  How do I get started?&lt;/h2&gt;

&lt;p&gt;Great! Here are some tutorials/resources with my comments:&lt;/p&gt;

&lt;h3 id=&quot;tutorials&quot;&gt;Tutorials&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://readwrite.com/2013/09/30/understanding-github-a-journey-for-beginners-part-1&quot;&gt;GitHub For Beginners: Don’t Get Scared, Get Started&lt;/a&gt;. A super gentle introduction to both Git and Github from a non-programmers point of view. Includes some motivation (borrowed heavily from in the sections above), a glossary, and a tutorial on how to set up Git and GitHub &lt;strong&gt;for the first time&lt;/strong&gt;. Highly recommended.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://readwrite.com/2013/10/02/github-for-beginners-part-2&quot;&gt;GitHub For Beginners: Commit, Push And Go&lt;/a&gt;. This is the second installment to the link above. Shows you how to add new files to your repository, save versions to your local repository (commit them), and save versions to your web-based GitHub repository (push them). Again, this is a very gentle introduction.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lifehacker.com/5983680/how-the-heck-do-i-use-github&quot;&gt;How the Heck Do I Use GitHub?&lt;/a&gt;. From &lt;a href=&quot;http://www.lifehacker.com&quot;&gt;Lifehacker&lt;/a&gt;, similar to the above, only shorter.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/git/tutorial&quot;&gt;Git Tutorials&lt;/a&gt;. From basics too more sophisticated help on things like changing your repositories past history (perhaps you accidently saved a password in the clear to a commit).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;other-resources&quot;&gt;Other Resources&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://try.github.io/levels/1/challenges/1&quot;&gt;Tru Git&lt;/a&gt;.  Read through some or all of the above, but still feeling some trepidation? No problem.  Speng 15 minutes on Try Git to get a sense of how this all works! (And Try Git’s code is hosted on … GitHub!)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/git/workflows&quot;&gt;Git Workflows&lt;/a&gt;.  This is an intermediate tutorial and discussion of various Git “workflows”.  Workflows describe rules and timing around how you pull code from a repository and push it back up when you are done working on it with a group of people.  There are probably an infinite number of ways teams of developers could use to coordinate development.  These are the most common. The most important tuturial to read is the one on &lt;a href=&quot;https://www.atlassian.com/git/workflows#!workflow-feature-branch&quot;&gt;feature-branch workflows&lt;/a&gt;, since that is teh workflow we will employ for KIPP Silo.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;git - the simple guide&quot;&gt;git - the simple guide&lt;/a&gt;. An excellent cheat sheet. “no deep shit ;)”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/dms/wac/images/landing/git/atlassian_git_cheatsheet.pdf&quot;&gt;Git Cheatsheet&lt;/a&gt;. A two page pdf cheatsheet.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ndpsoftware.com/git-cheatsheet.html#loc=workspace;&quot;&gt;Interactive Git Cheatsheet&lt;/a&gt;.  It is what it says it is.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://justinhileman.info/article/git-pretty/git-pretty.png&quot;&gt;Escape a Git mess: Step-by-step&lt;/a&gt;. What it says it is, too, and somewhat tongue-in-cheek.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Feel free to let me know if you have any questions or I’ve left anything out of this round-up!&lt;/p&gt;

</description>
        <pubDate>Tue, 29 Jul 2014 01:19:13 -0500</pubDate>
        <link>http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/07/29/git-resources/</link>
        <guid isPermaLink="true">http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/07/29/git-resources/</guid>
        
        
      </item>
    
      <item>
        <title>KIPP Silo @ KSS Day 1</title>
        <description>&lt;p&gt;If you are in Houston this Monday morning or afternoon, Andrew (&lt;a href=&quot;https://github.com/almartin82&quot; class=&quot;user-mention&quot;&gt;@almartin82&lt;/a&gt;), Erin Gunn (&lt;a href=&quot;https://github.com/eringunn&quot; class=&quot;user-mention&quot;&gt;@eringunn&lt;/a&gt;), Arie Glazier (&lt;a href=&quot;https://github.com/arieglazier&quot; class=&quot;user-mention&quot;&gt;@arieglazier&lt;/a&gt;) (he’s new and with &lt;a href=&quot;http://www.kippneworleans.org&quot;&gt;KIPP New Orleans&lt;/a&gt; so be sure say hi to him ), and I  (&lt;a href=&quot;https://github.com/chrishaid&quot; class=&quot;user-mention&quot;&gt;@chrishaid&lt;/a&gt;) are working in 342 D of the GRB Conference Center. Here’s handy map:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/***REMOVED***/images/KSS_2014_Monday.png&quot; alt=&quot;KSS Map Day 1&quot; title=&quot;KSS Map Day 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Come visit us if you want to work on data warehousing, etc. Hopefully we can find a home base (I’m thinking the Grit or Optimism Lounges once they open).  &lt;/p&gt;

&lt;p&gt;Also, please forward this information to any and all who want to work some data stuff!&lt;/p&gt;

&lt;p&gt;Looking forward to seeing you all,&lt;/p&gt;

&lt;p&gt;Chris and Andrew (and James in spirit).&lt;/p&gt;

</description>
        <pubDate>Mon, 28 Jul 2014 06:00:00 -0500</pubDate>
        <link>http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/07/28/KSS-day-one/</link>
        <guid isPermaLink="true">http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/07/28/KSS-day-one/</guid>
        
        
      </item>
    
      <item>
        <title>First Real Commit!!!</title>
        <description>&lt;p&gt;James Dozier (&lt;a href=&quot;https://github.com/jdozier&quot; class=&quot;user-mention&quot;&gt;@jdozier&lt;/a&gt;) has done it again!  Not only did he kick off this entire project with his now renown &lt;a href=&quot;http://www.kippshare.org&quot;&gt;KIPP Share&lt;/a&gt; post &lt;a href=&quot;https://www.kippshare.org/message/12867#12867&quot;&gt;KIPP Network Normed Data Warehouse&lt;/a&gt;, but he’s added &lt;strong&gt;the first real commit&lt;/strong&gt; to KIPP Silo. IT is called &lt;a href=&quot;https://github.com/kippdata/***REMOVED***/tree/master/scripts/Silo%20Conveyor&quot;&gt;Silo Conveyor&lt;/a&gt; (see what he did there) and is the start of Python script that grabs and adds the AssessmentsResults.csv from the MAP CDF to a database. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NB: this first script is not meant to be intimidating&lt;/strong&gt; for those less experienced in the dark arts of writing a script to read a data file, create a connection to a database, and load that data into the database.  Rather, it simply gives us a glimpse into the direction we would like to head. Clearly written code that not only serves the practical needs of getting our data into a warehouse, but the provide a longer term opportunity to help us each learn how to better do our jobs with these types of tools. &lt;/p&gt;

&lt;p&gt;True story: I knew no Python a little over a year ago, but I quickly figured out how to write a simple script that pulls MAP CDFs from NWEA’s MARC site and loads them into a simple database.  Andrew Martin (&lt;a href=&quot;https://github.com/almartin82&quot; class=&quot;user-mention&quot;&gt;@almartin82&lt;/a&gt;) did the same thing. In this case Python was both (i) the right tool for the job and (ii) a relatively straightfoward language to learn.  And it has really great facilities for connecting with databases.  &lt;/p&gt;

&lt;p&gt;I promise to get something up about setting up a SQL Server Database on &lt;a href=&quot;https://aws.amazon.com&quot;&gt;AWS&lt;/a&gt; soon.  It will be a gentle, step-by-step guide for getting something up and running. &lt;/p&gt;

&lt;p&gt;And again, kudos to James for kicking this thing off right!&lt;/p&gt;

</description>
        <pubDate>Tue, 15 Jul 2014 17:00:00 -0500</pubDate>
        <link>http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/07/15/first_commit/</link>
        <guid isPermaLink="true">http://kippdata.github.io/***REMOVED***/***REMOVED***/2014/07/15/first_commit/</guid>
        
        
      </item>
    
  </channel>
</rss>
